version: '3'
services:
  frontend:
    stdin_open: true
    tty: true
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - rabbitmq
      - websocket-server
    logging:
      driver: none

  api:
    stdin_open: true
    tty: true
    build:
      context: ./api
      dockerfile: ./Dockerfile
      args:
        RACK_ENV: "development"
    environment:
      RAILS_ENV: "development"
      DISABLE_DATABASE_ENVIRONMENT_CHECK: 1
      RABBITMQ_URL: 'amqp://guest:guest@rabbitmq:5672'
    volumes:
      - ./api:/app
    ports:
      - "3001:3001"
    depends_on:
      - rabbitmq
      - pgdata
    command: scripts/start-dev

  websocket-server:
    stdin_open: true
    ports:
      - "3006:3006"
    tty: true
    build:
      context: ./websocket-server
      dockerfile: ./Dockerfile
    environment:
      RABBITMQ_URL: 'amqp://guest:guest@rabbitmq:5672'
    volumes:
      - ./websocket-server:/app
    depends_on:
      - rabbitmq
    command: scripts/start-dev

  rabbitmq:
    image: 'rabbitmq:management'
    ports:
      - '5672:5672'
      - '15672:15672'
    volumes:
      - ~/docker-data/rabbitmq:/var/lib/rabbitmq
#    logging:
#      driver: none
  pgdata:
    image: 'postgres:alpine'
#    ports:
#      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: mystery
      POSTGRES_USER: root
    volumes:
      - ~/docker-data/pgdata:/var/lib/postgresql/data
    logging:
      driver: none
